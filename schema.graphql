type Vault @entity {
  id: ID!

  getPricePerFullShare: BigInt!

  totalSupply: BigInt!

  balance: BigInt!

  available: BigInt!

  token: Token!

  symbol: String!

  name: String!

  controller: Bytes!

  "Timestamp of the latest data update"
  timestamp: BigInt!

  "Block number of the latest data update"
  blockNumber: BigInt!

  events: [VaultEvent!]! @derivedFrom(field: "vault")
}

type Account @entity {
  "Ethereum address of the user"
  id: ID!

  vaultBalances: [AccountVaultBalance!]! @derivedFrom(field: "account")

  "Vault events <Withdraw - Deposit> that are related to this account"
  vaultEvents: [VaultEvent!]! @derivedFrom(field: "account")
}

type AccountVaultBalance @entity {
  id: ID!

  vault: Vault!

  account: Account!

  token: Token!

  balance: BigInt!
}

type Token @entity {
  id: ID!

  address: Bytes!

  decimals: Int!

  name: String!

  symbol: String!
}

type Transfer @entity {
  id: ID!

  from: Account!

  to: Account!

  value: BigInt!

  vault: Vault!

  getPricePerFullShare: BigInt!

  balance: BigInt!

  totalSupply: BigInt!

  available: BigInt!

  timestamp: BigInt!

  blockNumber: BigInt!

  transactionHash: Bytes!
}

interface VaultEvent {
  id: ID!

  vault: Vault!

  account: Account!

  amount: BigInt!

  shares: BigInt!

  timestamp: BigInt!

  blockNumber: BigInt!

  transactionHash: Bytes!

  getPricePerFullShare: BigInt!
}

type MintEvent implements VaultEvent @entity {
  id: ID!

  vault: Vault!

  account: Account!

  amount: BigInt!

  shares: BigInt!

  timestamp: BigInt!

  blockNumber: BigInt!

  transactionHash: Bytes!

  getPricePerFullShare: BigInt!
}

type BurnEvent implements VaultEvent @entity {
  id: ID!

  vault: Vault!

  account: Account!

  amount: BigInt!

  shares: BigInt!

  timestamp: BigInt!

  blockNumber: BigInt!

  transactionHash: Bytes!

  getPricePerFullShare: BigInt!
}

type DepositEvent implements VaultEvent @entity {
  id: ID!

  vault: Vault!

  account: Account!

  amount: BigInt!

  shares: BigInt!

  timestamp: BigInt!

  blockNumber: BigInt!

  transactionHash: Bytes!

  getPricePerFullShare: BigInt!
}

type WithdrawEvent implements VaultEvent @entity {
  id: ID!

  vault: Vault!

  account: Account!

  amount: BigInt!

  shares: BigInt!

  timestamp: BigInt!

  blockNumber: BigInt!

  transactionHash: Bytes!

  getPricePerFullShare: BigInt!
}
